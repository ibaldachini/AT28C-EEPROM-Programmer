/*  
  AT28C_Programmer.ino - Programmatore EEPROM AT28C
  Copyright (C) 2023 DrVector
  
  Gestione EEPROM AT28C
*/

#include <Arduino.h>

// tipologie memorie conosciute
typedef enum {
  AT28C64,
  AT28C256,
  E2764,
  E27128,
  E27256,
  E27512,
  NONE
} e_rom_type;

//******************************************************************************************************************//
//* Lettura di un byte all'indirizzo selezionato
//******************************************************************************************************************//
byte readByte(e_rom_type romtype, unsigned long address);

//******************************************************************************************************************//
//* Scrittura di un byte all'indirizzo selezionato
//******************************************************************************************************************//
byte writeByte(e_rom_type romtype, unsigned long address, byte value);

//******************************************************************************************************************//
//* Attende il termine della scrittura di un byte e ne verifica la corretta valorizzazione
//******************************************************************************************************************//
byte waitAndCheckWrite(e_rom_type romtype, byte value);

//******************************************************************************************************************//
//* Scrittura della EEPROM
//******************************************************************************************************************//
void writeEEPROM(e_rom_type romtype, unsigned long size);

//******************************************************************************************************************//
//* Scrittura della EEPROM in modo paginato
//******************************************************************************************************************//
void writePagedEEPROM(e_rom_type romtype, unsigned long size, unsigned int pagesize);

//******************************************************************************************************************//
//* Lettura della EEPROM
//******************************************************************************************************************//
void readEEPROM(e_rom_type romtype, unsigned long size);

//******************************************************************************************************************//
//* Disabilita Software Data Protection
//******************************************************************************************************************//
void disableSDP();

//******************************************************************************************************************//
//* Abilita Software Data Protection
//******************************************************************************************************************//
void enableSDP();
